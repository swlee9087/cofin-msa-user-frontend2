{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\GitHub\\\\cofin-msa-user-frontend2\\\\src\\\\user\\\\2-join\\\\UserJoin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router';\nimport axios from 'axios';\nimport { Icon } from '@iconify/react';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\nimport { useNavigate } from 'react-router-dom'; // material\n\nimport { Stack, TextField, IconButton, InputAdornment } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserJoin() {\n  _s();\n\n  // const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n  const history = useHistory();\n  const SERVER = '';\n  const [join, setJoin] = useState({});\n  const {} = join;\n\n  const handleChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setJoin({ ...join,\n      [name]: value\n    });\n  };\n\n  const userJoin = joinRequest => axios.post(`${SERVER}/??`, JSON.stringify(joinRequest), {\n    headers\n  });\n\n  const headers = {}; // const handleSubmit=e=>{}\n\n  const RegisterSchema = Yup.object().shape({\n    firstName: Yup.string().required('이름'),\n    lastName: Yup.string().required('성'),\n    email: Yup.string().email('메일 형식에 맞게 입력해주세요').required('메일 주소를 입력해주세요'),\n    password: Yup.string().required('비밀번호를 입력해주세요')\n  });\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: ''\n    },\n    validationSchema: RegisterSchema,\n    onSubmit: () => {// navigate('/', { replace: true });\n      // navigate=클릭하면 메인페이지 뜨게 주소 넣기\n      // RETRY\n    }\n  });\n  const {\n    errors,\n    touched,\n    handleSubmit,\n    isSubmitting,\n    getFieldProps\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(FormikProvider, {\n    value: formik,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      autoComplete: \"off\",\n      noValidate: true,\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          direction: {\n            xs: 'column',\n            sm: 'row'\n          },\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"\\uC774\\uB984\",\n            ...getFieldProps('firstName'),\n            error: Boolean(touched.firstName && errors.firstName),\n            helperText: touched.firstName && errors.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"\\uC131\",\n            ...getFieldProps('lastName'),\n            error: Boolean(touched.lastName && errors.lastName),\n            helperText: touched.lastName && errors.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          autoComplete: \"username\",\n          type: \"email\",\n          label: \"\\uBA54\\uC77C\\uC8FC\\uC18C\",\n          ...getFieldProps('email'),\n          error: Boolean(touched.email && errors.email),\n          helperText: touched.email && errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          autoComplete: \"current-password\",\n          type: showPassword ? 'text' : 'password',\n          label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n          ...getFieldProps('password'),\n          InputProps: {\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                onClick: () => setShowPassword(prev => !prev),\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  icon: showPassword ? eyeFill : eyeOffFill\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 21\n            }, this)\n          },\n          error: Boolean(touched.password && errors.password),\n          helperText: touched.password && errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n          fullWidth: true,\n          size: \"large\",\n          type: \"submit\",\n          variant: \"contained\",\n          loading: isSubmitting,\n          children: \"\\uAC00\\uC785 \\uC2E0\\uCCAD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this) // return(\n  //     <div><h2>가입신청</h2>\n  //     <form onSubmit={handleSubmit} method='POST'>\n  //         <ul>\n  //         <li>\n  //             <label>\n  //                 아이디 : <input type=\"text\" id=\"username\" name=\"username\" value={username} onChange={handleChange}\n  //                 size=\"10\" minlength=\"4\" maxlength=\"15\"/>\n  //             </label>\n  //             <small>4~15자리 이내의 영문과 숫자</small>\n  //         </li>\n  //         <li>\n  //             <label>\n  //                 이메일 : <input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={handleChange}/>\n  //             </label>\n  //         </li>\n  //         <li>\n  //             <label>\n  //                 비밀 번호 : <input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={handleChange}/>\n  //             </label>\n  //         </li>\n  //         <li>\n  //             <label>\n  //                 이름 : <input type=\"text\" id=\"name\" name=\"name\" value={name} onChange={handleChange}/>\n  //             </label>\n  //         </li>\n  //         <li>\n  //             <label>\n  //                 주소 : <input type=\"text\" id=\"address\" name=\"address\" value={address} onChange={handleChange}/>                </label>\n  //         </li>\n  //         <li>\n  //             <label>\n  //                 등록일 : <input type=\"text\" id=\"birth\" name=\"birth\" value={birth} onChange={handleChange}/>\n  //             </label>\n  //         </li>\n  //         <li>\n  //             <input type=\"submit\" value=\"회원가입\"/>\n  //         </li>\n  //     </ul>\n  //     </form></div>\n  ;\n}\n\n_s(UserJoin, \"sGSzWKmMXW2DTkUz99MrTzRpB4k=\", false, function () {\n  return [useHistory, useFormik];\n});\n\n_c = UserJoin;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserJoin\");","map":{"version":3,"sources":["C:/Users/USER/Documents/GitHub/cofin-msa-user-frontend2/src/user/2-join/UserJoin.js"],"names":["React","useState","Yup","useHistory","axios","Icon","useFormik","Form","FormikProvider","eyeFill","eyeOffFill","useNavigate","Stack","TextField","IconButton","InputAdornment","LoadingButton","UserJoin","showPassword","setShowPassword","history","SERVER","join","setJoin","handleChange","e","value","name","target","userJoin","joinRequest","post","JSON","stringify","headers","RegisterSchema","object","shape","firstName","string","required","lastName","email","password","formik","initialValues","validationSchema","onSubmit","errors","touched","handleSubmit","isSubmitting","getFieldProps","xs","sm","Boolean","endAdornment","prev"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router'\nimport axios from 'axios'\nimport { Icon } from '@iconify/react';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\nimport { useNavigate } from 'react-router-dom';\n// material\nimport { Stack, TextField, IconButton, InputAdornment } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n\nexport default function UserJoin(){\n    // const navigate = useNavigate();\n    const [showPassword, setShowPassword] = useState(false);\n    \n    const history=useHistory()\n    const SERVER=''\n    const[join,setJoin]=useState({})\n    const{}=join\n    const handleChange =e=>{\n        const{value,name}=e.target\n        setJoin({...join,[name]:value})\n    }\n    const userJoin=joinRequest=>axios.post(`${SERVER}/??`, JSON.stringify(joinRequest),{headers})\n    const headers = {}\n    // const handleSubmit=e=>{}\n\n    const RegisterSchema = Yup.object().shape({\n        firstName: Yup.string().required('이름'),\n        lastName: Yup.string().required('성'),\n        email: Yup.string().email('메일 형식에 맞게 입력해주세요').required('메일 주소를 입력해주세요'),\n        password: Yup.string().required('비밀번호를 입력해주세요')\n      })\n      const formik = useFormik({\n        initialValues: {\n          firstName: '',\n          lastName: '',\n          email: '',\n          password: ''\n        },\n        validationSchema: RegisterSchema,\n        onSubmit: () => {\n          // navigate('/', { replace: true });\n          // navigate=클릭하면 메인페이지 뜨게 주소 넣기\n                      // RETRY\n        }\n      })\n      const { errors, touched, handleSubmit, isSubmitting, getFieldProps } = formik;\n\n      return (\n        <FormikProvider value={formik}>\n          <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n            <Stack spacing={3}>\n              <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\n                <TextField\n                  fullWidth\n                  label=\"이름\"\n                  {...getFieldProps('firstName')}\n                  error={Boolean(touched.firstName && errors.firstName)}\n                  helperText={touched.firstName && errors.firstName}\n                />\n    \n                <TextField\n                  fullWidth\n                  label=\"성\"\n                  {...getFieldProps('lastName')}\n                  error={Boolean(touched.lastName && errors.lastName)}\n                  helperText={touched.lastName && errors.lastName}\n                />\n              </Stack>\n    \n              <TextField\n                fullWidth\n                autoComplete=\"username\"\n                type=\"email\"\n                label=\"메일주소\"\n                {...getFieldProps('email')}\n                error={Boolean(touched.email && errors.email)}\n                helperText={touched.email && errors.email}\n              />\n    \n              <TextField\n                fullWidth\n                autoComplete=\"current-password\"\n                type={showPassword ? 'text' : 'password'}\n                label=\"비밀번호\"\n                {...getFieldProps('password')}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton edge=\"end\" onClick={() => setShowPassword((prev) => !prev)}>\n                        <Icon icon={showPassword ? eyeFill : eyeOffFill} />\n                      </IconButton>\n                    </InputAdornment>\n                  )\n                }}\n                error={Boolean(touched.password && errors.password)}\n                helperText={touched.password && errors.password}\n              />\n    \n              <LoadingButton\n                fullWidth\n                size=\"large\"\n                type=\"submit\"\n                variant=\"contained\"\n                loading={isSubmitting}\n              >\n                가입 신청\n              </LoadingButton>\n            </Stack>\n          </Form>\n        </FormikProvider>\n\n    // return(\n    //     <div><h2>가입신청</h2>\n    //     <form onSubmit={handleSubmit} method='POST'>\n    //         <ul>\n    //         <li>\n    //             <label>\n    //                 아이디 : <input type=\"text\" id=\"username\" name=\"username\" value={username} onChange={handleChange}\n    //                 size=\"10\" minlength=\"4\" maxlength=\"15\"/>\n    //             </label>\n    //             <small>4~15자리 이내의 영문과 숫자</small>\n    //         </li>\n    //         <li>\n    //             <label>\n    //                 이메일 : <input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={handleChange}/>\n    //             </label>\n    //         </li>\n    //         <li>\n    //             <label>\n    //                 비밀 번호 : <input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={handleChange}/>\n    //             </label>\n    //         </li>\n    //         <li>\n    //             <label>\n    //                 이름 : <input type=\"text\" id=\"name\" name=\"name\" value={name} onChange={handleChange}/>\n    //             </label>\n    //         </li>\n    //         <li>\n    //             <label>\n    //                 주소 : <input type=\"text\" id=\"address\" name=\"address\" value={address} onChange={handleChange}/>                </label>\n    //         </li>\n    //         <li>\n    //             <label>\n    //                 등록일 : <input type=\"text\" id=\"birth\" name=\"birth\" value={birth} onChange={handleChange}/>\n    //             </label>\n    //         </li>\n           \n    //         <li>\n    //             <input type=\"submit\" value=\"회원가입\"/>\n    //         </li>\n\n    //     </ul>\n    //     </form></div>\n    )\n}"]},"metadata":{},"sourceType":"module"}