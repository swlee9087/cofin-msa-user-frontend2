{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\GitHub\\\\cofin-msa-user-frontend2\\\\src\\\\user\\\\templates\\\\UserTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Table, TableBody, TableCell, TableContainer, TableFooter, TableHead, TablePagination, TableRow, Paper } from \"@material-ui/core\";\nimport faker from \"faker/locale/ko\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfaker.seed(123);\nconst users = Array(53).fill().map(() => ({\n  id: faker.random.uuid(),\n  name: faker.name.lastName() + faker.name.firstName(),\n  email: faker.internet.email(),\n  phone: faker.phone.phoneNumber()\n}));\n\nfunction UserTable() {\n  _s();\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      size: \"small\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: users.slice(page * rowsPerPage, (page + 1) * rowsPerPage).map((_ref, i) => {\n          let {\n            id,\n            name,\n            email,\n            phone\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: page * rowsPerPage + i + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableFooter, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(TablePagination, {\n            count: users.length,\n            page: page,\n            rowsPerPage: rowsPerPage,\n            onChangePage: handleChangePage,\n            onChangeRowsPerPage: handleChangeRowsPerPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserTable, \"65nbIEELuFY2eeUXbED/8VsHrEQ=\");\n\n_c = UserTable;\nexport default UserTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserTable\");","map":{"version":3,"sources":["C:/Users/USER/Documents/GitHub/cofin-msa-user-frontend2/src/user/templates/UserTable.js"],"names":["React","useState","Table","TableBody","TableCell","TableContainer","TableFooter","TableHead","TablePagination","TableRow","Paper","faker","seed","users","Array","fill","map","id","random","uuid","name","lastName","firstName","email","internet","phone","phoneNumber","UserTable","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","slice","i","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableFooter,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Paper\n} from \"@material-ui/core\";\nimport faker from \"faker/locale/ko\";\n\n\nfaker.seed(123);\n\nconst users = Array(53)\n  .fill()\n  .map(() => ({\n    id: faker.random.uuid(),\n    name: faker.name.lastName() + faker.name.firstName(),\n    email: faker.internet.email(),\n    phone: faker.phone.phoneNumber()\n  }));\n\n\nfunction UserTable() {\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>No</TableCell>\n            <TableCell align=\"right\">Name</TableCell>\n            <TableCell align=\"right\">Email</TableCell>\n            <TableCell align=\"right\">Phone</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {users\n            .slice(page * rowsPerPage, (page + 1) * rowsPerPage)\n            .map(({ id, name, email, phone }, i) => (\n              <TableRow key={id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {page * rowsPerPage + i + 1}\n                </TableCell>\n                <TableCell align=\"right\">{name}</TableCell>\n                <TableCell align=\"right\">{email}</TableCell>\n                <TableCell align=\"right\">{phone}</TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n              count={users.length}\n              page={page}\n              rowsPerPage={rowsPerPage}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default UserTable;\n"]},"metadata":{},"sourceType":"module"}