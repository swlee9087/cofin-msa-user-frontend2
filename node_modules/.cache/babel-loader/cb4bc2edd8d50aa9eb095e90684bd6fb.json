{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\GitHub\\\\cofin-msa-user-frontend2\\\\src\\\\user\\\\components\\\\UserJoin.js\",\n    _s = $RefreshSig$();\n\nimport * as Yup from 'yup';\nimport { useState } from 'react';\nimport { Icon } from '@iconify/react';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\nimport { useNavigate } from 'react-router-dom'; // import { useNavigate } from 'react-router';\n// material\n\nimport { Stack, TextField, IconButton, InputAdornment } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegisterForm() {\n  _s();\n\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n  const SERVER = 'http://127.0.0.1:8000/api/user/join'; // ????\n\n  const {\n    user_email,\n    username,\n    password,\n    user_name,\n    user_birthday,\n    user_sex,\n    user_phone,\n    user_address,\n    user_vaccinated,\n    vaccine_type\n  } = `user`; // const userJoin=joinRequest=>axios.post(`${SERVER}/??`, JSON.stringify(joinRequest),{headers})\n\n  const RegisterSchema = Yup.object().shape({\n    user_email: Yup.string().email('메일 형식에 맞게 입력해주세요').required('메일 주소를 입력해주세요'),\n    password: Yup.string().required('비밀번호 6 ~ 12자 이내로 작성해주세요').min(6, '6 ~ 12자 이내로 작성해주세요'),\n    passwordConfirm: Yup.string().oneOf([Yup.ref('password'), null], '비밀번호가 일치하지 않습니다'),\n    username: Yup.string().required('아이디 6 ~ 12자 이내로 작성해주세요').min(6, '6 ~ 12자 이내로 작성해주세요'),\n    user_birthday: Yup.string().required('생년월일 8자리 입력해주세요').min(8),\n    user_sex: Yup.string().required(),\n    user_phone: Yup.string().required('연락처 11자리 입력해주세요'),\n    user_address: Yup.string().required(),\n    user_vaccinated: Yup.string().required('백신 접종완료 여부를 알려주세요'),\n    vaccine_type: Yup.string()\n  });\n  const formik = useFormik({\n    initialValues: {\n      user_email: '',\n      username: '',\n      password: '',\n      user_name: '',\n      user_birthday: '',\n      user_sex: '',\n      user_phone: '',\n      user_address: '',\n      user_vaccinated: '',\n      vaccine_type: ''\n    },\n    validationSchema: RegisterSchema,\n    onSubmit: () => {\n      navigate('/', {\n        replace: true\n      });\n    }\n  }); // const handleChange = e => {\n  //   console.log(e.target.name);\n  //   setSignup({ ...signup, [e.target.name]: e.target.value });\n  //   console.log(signup);\n  // };\n\n  const {\n    errors,\n    touched,\n    handleSubmit,\n    isSubmitting,\n    getFieldProps\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    align: \"center\",\n    style: {\n      display: \"inline-block\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"\\uD68C\\uC6D0 \\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormikProvider, {\n      value: formik,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        autoComplete: \"off\",\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Stack, {\n            direction: {\n              xs: 'column',\n              sm: 'row'\n            },\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"\\uC774\\uB984\",\n              ...getFieldProps('user_name'),\n              error: Boolean(touched.user_name && errors.user_name),\n              helperText: touched.user_name && errors.user_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"\\uC0DD\\uB144\\uC6D4\\uC77C\",\n              ...getFieldProps('user_birthday'),\n              error: Boolean(touched.user_birthday && errors.user_birthday),\n              helperText: touched.user_birthday && errors.user_birthday\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"\\uC131\\uBCC4\",\n              ...getFieldProps('user_sex'),\n              error: Boolean(touched.user_sex && errors.user_sex),\n              helperText: touched.user_sex && errors.user_sex // 성별은 radio? \n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            autoComplete: \"user_email\",\n            type: \"email\",\n            label: \"\\uC774\\uBA54\\uC77C=\\uB85C\\uADF8\\uC778 \\uC544\\uC774\\uB514\",\n            ...getFieldProps('user_email'),\n            error: Boolean(touched.user_email && errors.user_email),\n            helperText: touched.user_email && errors.user_email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            autoComplete: \"current-password\",\n            type: showPassword ? 'text' : 'password',\n            label: \"6~12\\uC790\\uB9AC \\uBE44\\uBC00\\uBC88\\uD638\",\n            ...getFieldProps('password'),\n            InputProps: {\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  onClick: () => setShowPassword(prev => !prev),\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    icon: showPassword ? eyeFill : eyeOffFill\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 19\n              }, this)\n            },\n            error: Boolean(touched.password && errors.password),\n            helperText: touched.password && errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            autoComplete: \"current-password\",\n            type: showPassword ? 'text' : 'password',\n            label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n            ...getFieldProps('password'),\n            InputProps: {\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  onClick: () => setShowPassword(prev => !prev),\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    icon: showPassword ? eyeFill : eyeOffFill\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this)\n            },\n            error: Boolean(touched.password && errors.password),\n            helperText: touched.password && errors.password // 확인!!\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"010-0000-0000\",\n            ...getFieldProps('user_phone'),\n            error: Boolean(touched.user_phone && errors.user_phone),\n            helperText: touched.user_phone && errors.user_phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"\\uC8FC\\uC18C\\uC9C0\",\n            ...getFieldProps('user_address'),\n            error: Boolean(touched.user_address && errors.user_address),\n            helperText: touched.user_address && errors.user_address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            direction: {\n              xs: 'column',\n              sm: 'row'\n            },\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"\\uBC31\\uC2E0\\uC811\\uC885 \\uC5EC\\uBD80 (Y/N)\",\n              ...getFieldProps('user_vaccinated'),\n              error: Boolean(touched.user_vaccinated && errors.user_vaccinated),\n              helperText: touched.user_vaccinated && errors.user_vaccinated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"\\uC811\\uC885 \\uBC31\\uC2E0 \\uC885\\uB958\",\n              ...getFieldProps('vaccine_type'),\n              error: Boolean(touched.vaccine_type && errors.vaccine_type),\n              helperText: touched.vaccine_type && errors.vaccine_type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n            fullWidth: true,\n            size: \"large\",\n            type: \"submit\",\n            variant: \"contained\",\n            loading: isSubmitting,\n            children: \"\\uD68C\\uC6D0 \\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterForm, \"TyfXYEpvWDWRGnFGjig1zuRer3M=\", false, function () {\n  return [useNavigate, useFormik];\n});\n\n_c = RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["C:/Users/USER/Documents/GitHub/cofin-msa-user-frontend2/src/user/components/UserJoin.js"],"names":["Yup","useState","Icon","useFormik","Form","FormikProvider","eyeFill","eyeOffFill","useNavigate","Stack","TextField","IconButton","InputAdornment","LoadingButton","RegisterForm","navigate","showPassword","setShowPassword","SERVER","user_email","username","password","user_name","user_birthday","user_sex","user_phone","user_address","user_vaccinated","vaccine_type","RegisterSchema","object","shape","string","email","required","min","passwordConfirm","oneOf","ref","formik","initialValues","validationSchema","onSubmit","replace","errors","touched","handleSubmit","isSubmitting","getFieldProps","display","xs","sm","Boolean","endAdornment","prev"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\nimport { useState } from 'react';\nimport { Icon } from '@iconify/react';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\nimport { useNavigate } from 'react-router-dom';\n// import { useNavigate } from 'react-router';\n// material\nimport { Stack, TextField, IconButton, InputAdornment } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n\n\nexport default function RegisterForm() {\n  const navigate = useNavigate();\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const SERVER='http://127.0.0.1:8000/api/user/join'\n// ????\n\n  const{user_email, username, password, \n    user_name, user_birthday, user_sex, user_phone, \n    user_address, user_vaccinated, vaccine_type}=`user`\n  \n  // const userJoin=joinRequest=>axios.post(`${SERVER}/??`, JSON.stringify(joinRequest),{headers})\n  \n\n  const RegisterSchema = Yup.object().shape({\n    user_email: Yup.string().email('메일 형식에 맞게 입력해주세요').required('메일 주소를 입력해주세요'),\n    password: Yup.string().required('비밀번호 6 ~ 12자 이내로 작성해주세요').min(6, '6 ~ 12자 이내로 작성해주세요'),  \n    passwordConfirm: Yup.string().oneOf([Yup.ref('password'), null], '비밀번호가 일치하지 않습니다'),\n    username: Yup.string().required('아이디 6 ~ 12자 이내로 작성해주세요').min(6, '6 ~ 12자 이내로 작성해주세요'),\n    user_birthday: Yup.string().required('생년월일 8자리 입력해주세요').min(8),\n    user_sex: Yup.string().required(),\n    user_phone: Yup.string().required('연락처 11자리 입력해주세요'),\n    user_address: Yup.string().required(),\n    user_vaccinated: Yup.string().required('백신 접종완료 여부를 알려주세요'),\n    vaccine_type: Yup.string()        \n    });\n\n  const formik = useFormik({\n    initialValues: {\n      user_email: '',\n        username:'',\n        password: '',\n        user_name: '',\n        user_birthday: '',\n        user_sex:'',\n        user_phone:'',\n        user_address:'',\n        user_vaccinated:'',\n        vaccine_type:''\n    },\n    validationSchema: RegisterSchema,\n    onSubmit: () => {\n      navigate('/', { replace: true });\n    }\n  });\n\n  // const handleChange = e => {\n  //   console.log(e.target.name);\n  //   setSignup({ ...signup, [e.target.name]: e.target.value });\n  //   console.log(signup);\n  // };\n\n\n  \n  const { errors, touched, handleSubmit, isSubmitting, getFieldProps } = formik;\n\n  return (\n    <div align=\"center\" style={{ display: \"inline-block\" }}>\n      <h1><b>회원 가입</b></h1>\n    <FormikProvider value={formik}>\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n        <Stack spacing={3}>\n        <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\n              <TextField\n                fullWidth\n                label=\"이름\"\n                {...getFieldProps('user_name')}\n                error={Boolean(touched.user_name && errors.user_name)}\n                helperText={touched.user_name && errors.user_name}\n              />\n  \n              <TextField\n                fullWidth\n                label=\"생년월일\"\n                {...getFieldProps('user_birthday')}\n                error={Boolean(touched.user_birthday && errors.user_birthday)}\n                helperText={touched.user_birthday && errors.user_birthday}\n              />\n              <TextField\n                fullWidth\n                label=\"성별\"\n                {...getFieldProps('user_sex')}\n                error={Boolean(touched.user_sex && errors.user_sex)}\n                helperText={touched.user_sex && errors.user_sex}\n                // 성별은 radio? \n              /></Stack>\n        <TextField\n              fullWidth\n              autoComplete=\"user_email\"\n              type=\"email\"\n              label=\"이메일=로그인 아이디\"\n              {...getFieldProps('user_email')}\n              error={Boolean(touched.user_email && errors.user_email)}\n              helperText={touched.user_email && errors.user_email}\n            />\n            <TextField\n              fullWidth\n              autoComplete=\"current-password\"\n              type={showPassword ? 'text' : 'password'}\n              label=\"6~12자리 비밀번호\"\n              {...getFieldProps('password')}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton edge=\"end\" onClick={() => setShowPassword((prev) => !prev)}>\n                      <Icon icon={showPassword ? eyeFill : eyeOffFill} />\n                    </IconButton>\n                  </InputAdornment>\n                )\n              }}\n              error={Boolean(touched.password && errors.password)}\n              helperText={touched.password && errors.password}\n            />\n            <TextField\n              fullWidth\n              autoComplete=\"current-password\"\n              type={showPassword ? 'text' : 'password'}\n              label=\"비밀번호 확인\"\n              {...getFieldProps('password')}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton edge=\"end\" onClick={() => setShowPassword((prev) => !prev)}>\n                      <Icon icon={showPassword ? eyeFill : eyeOffFill} />\n                    </IconButton>\n                  </InputAdornment>\n                )\n              }}\n              error={Boolean(touched.password && errors.password)}\n              helperText={touched.password && errors.password}\n              // 확인!!\n            />\n            \n              \n              <TextField\n                fullWidth\n                label=\"010-0000-0000\"\n                {...getFieldProps('user_phone')}\n                error={Boolean(touched.user_phone && errors.user_phone)}\n                helperText={touched.user_phone && errors.user_phone}\n              />\n            \n              <TextField\n                fullWidth\n                label=\"주소지\"\n                {...getFieldProps('user_address')}\n                error={Boolean(touched.user_address && errors.user_address)}\n                helperText={touched.user_address && errors.user_address}\n              />\n            <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>             \n              <TextField\n                fullWidth\n                label=\"백신접종 여부 (Y/N)\"\n                {...getFieldProps('user_vaccinated')}\n                error={Boolean(touched.user_vaccinated && errors.user_vaccinated)}\n                helperText={touched.user_vaccinated && errors.user_vaccinated}\n              />\n  \n              <TextField\n                fullWidth\n                label=\"접종 백신 종류\"\n                {...getFieldProps('vaccine_type')}\n                error={Boolean(touched.vaccine_type && errors.vaccine_type)}\n                helperText={touched.vaccine_type && errors.vaccine_type}\n              /></Stack>          \n            \n            <LoadingButton\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n              loading={isSubmitting}>\n              회원 가입\n            </LoadingButton>\n        </Stack>\n      </Form>\n    </FormikProvider>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}