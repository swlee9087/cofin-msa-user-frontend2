{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\GitHub\\\\cofin-msa-user-frontend2\\\\src\\\\user\\\\2-join\\\\UserJoin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router';\nimport axios from 'axios';\nimport { Icon } from '@iconify/react'; // import { useFormik, Form, FormikProvider } from 'formik';\n\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\nimport { useNavigate } from 'react-router-dom'; // material\n\nimport { Stack, TextField, IconButton, InputAdornment } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserJoin() {\n  _s();\n\n  // const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n  const history = useHistory();\n  const SERVER = 'http://127.0.0.1:8000/api/user/join';\n  const [user, setUser] = useState({\n    user_email: 'admin@naver.com',\n    username: 'admin',\n    password: 'admin',\n    user_name: 'admin001',\n    user_birthday: '2021-06-28',\n    user_sex: 'male',\n    user_phone: '01012345678',\n    user_address: '서울특별시 강남구',\n    user_vaccinated: 'Yes',\n    vaccine_type: 'Moderna'\n  });\n  const {\n    user_email,\n    username,\n    password,\n    user_name,\n    user_birthday,\n    user_sex,\n    user_phone,\n    user_address,\n    user_vaccinated,\n    vaccine_type\n  } = 'user';\n\n  const userJoin = joinRequest => axios.post(`${SERVER}/??`, JSON.stringify(joinRequest), {\n    headers\n  });\n\n  const headers = {};\n\n  const handleSubmit = e => {\n    e.prventDefault();\n    alert(`기입한 회원정보: ${JSON.stringify(user)}`);\n    userJoin({\n      user\n    }).then(res => {\n      alert(`가입 완료: ${res.data.result}`);\n    }).catch(err => {\n      alert(`가입 실패: ${err}`);\n    });\n  };\n\n  const handleChange = e => {\n    e.preventDefault();\n    const {\n      value,\n      name\n    } = e.target;\n    setUser({ ...user,\n      [name]: value\n    });\n  };\n\n  const RegisterSchema = Yup.object().shape({\n    user_email: Yup.string().email('메일 형식에 맞게 입력해주세요').required('메일 주소를 입력해주세요'),\n    password: Yup.string().required('비밀번호 6 ~ 12자 이내로 작성해주세요').min(6, '6 ~ 12자 이내로 작성해주세요'),\n    passwordConfirm: Yup.string().oneOf([Yup.ref('password'), null], '비밀번호가 일치하지 않습니다'),\n    username: Yup.string().required('아이디 6 ~ 12자 이내로 작성해주세요').min(6, '6 ~ 12자 이내로 작성해주세요'),\n    user_birthday: Yup.string().required(),\n    user_sex: Yup.string().required(),\n    user_phone: Yup.string().required('핸드폰 연락처 11자리를 입력해주세요'),\n    user_address: Yup.string().required(),\n    user_vaccinated: Yup.string('백신 접종완료 여부를 알려주세요'),\n    vaccine_type: Yup.string()\n  });\n  const defaultValues = {\n    initialValues: {\n      user_email: '',\n      username: '',\n      password: '',\n      user_name: '',\n      user_birthday: '',\n      user_sex: '',\n      user_phone: '',\n      user_address: '',\n      user_vaccinated: '',\n      vaccine_type: ''\n    },\n    validationSchema: RegisterSchema,\n    onSubmit: () => {// navigate('/', { replace: true });\n      // navigate=클릭하면 메인페이지 뜨게 주소 넣기\n      // RETRY\n    }\n  }; // const { errors, touched, handleSubmit, isSubmitting, getFieldProps } = formik;\n\n  const {\n    errors,\n    touched,\n    isSubmitting,\n    getFieldProps\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(FormikProvider, {\n    value: formik,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      autoComplete: \"off\",\n      noValidate: true,\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          direction: {\n            xs: 'column',\n            sm: 'row'\n          },\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"\\uC774\\uB984\",\n            ...getFieldProps('firstName'),\n            error: Boolean(touched.firstName && errors.firstName),\n            helperText: touched.firstName && errors.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"\\uC131\",\n            ...getFieldProps('lastName'),\n            error: Boolean(touched.lastName && errors.lastName),\n            helperText: touched.lastName && errors.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          autoComplete: \"username\",\n          type: \"email\",\n          label: \"\\uBA54\\uC77C\\uC8FC\\uC18C\",\n          ...getFieldProps('email'),\n          error: Boolean(touched.email && errors.email),\n          helperText: touched.email && errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          autoComplete: \"current-password\",\n          type: showPassword ? 'text' : 'password',\n          label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n          ...getFieldProps('password'),\n          InputProps: {\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                onClick: () => setShowPassword(prev => !prev),\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  icon: showPassword ? eyeFill : eyeOffFill\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 21\n            }, this)\n          },\n          error: Boolean(touched.password && errors.password),\n          helperText: touched.password && errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n          fullWidth: true,\n          size: \"large\",\n          type: \"submit\",\n          variant: \"contained\",\n          loading: isSubmitting,\n          children: \"\\uAC00\\uC785 \\uC2E0\\uCCAD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n} // {\n//   user_email:'admin@naver.com',\n//       username:'admin',\n//       password:'admin',\n//       user_name:'admin001',\n//       user_birthday:'2021-06-28',\n//       user_sex:'male',\n//       user_phone:'01012345678',\n//       user_address:'서울특별시 강남구',\n//       user_vaccinated:'Yes',\n//       vaccine_type:'Moderna'\n// }\n\n_s(UserJoin, \"AFd+afYU0XaV6HuYrB4zJqHgpW4=\", false, function () {\n  return [useHistory];\n});\n\n_c = UserJoin;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserJoin\");","map":{"version":3,"sources":["C:/Users/USER/Documents/GitHub/cofin-msa-user-frontend2/src/user/2-join/UserJoin.js"],"names":["React","useState","Yup","useHistory","axios","Icon","eyeFill","eyeOffFill","useNavigate","Stack","TextField","IconButton","InputAdornment","LoadingButton","UserJoin","showPassword","setShowPassword","history","SERVER","user","setUser","user_email","username","password","user_name","user_birthday","user_sex","user_phone","user_address","user_vaccinated","vaccine_type","userJoin","joinRequest","post","JSON","stringify","headers","handleSubmit","e","prventDefault","alert","then","res","data","result","catch","err","handleChange","preventDefault","value","name","target","RegisterSchema","object","shape","string","email","required","min","passwordConfirm","oneOf","ref","defaultValues","initialValues","validationSchema","onSubmit","errors","touched","isSubmitting","getFieldProps","formik","xs","sm","Boolean","firstName","lastName","endAdornment","prev"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router'\nimport axios from 'axios'\nimport { Icon } from '@iconify/react';\n// import { useFormik, Form, FormikProvider } from 'formik';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\nimport { useNavigate } from 'react-router-dom';\n// material\nimport { Stack, TextField, IconButton, InputAdornment } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n\nexport default function UserJoin(){\n    // const navigate = useNavigate();\n    const [showPassword, setShowPassword] = useState(false);\n    \n    const history=useHistory()\n\n    const SERVER='http://127.0.0.1:8000/api/user/join'\n\n    const[user,setUser]=useState({\n      user_email:'admin@naver.com',\n      username:'admin',\n      password:'admin',\n      user_name:'admin001',\n      user_birthday:'2021-06-28',\n      user_sex:'male',\n      user_phone:'01012345678',\n      user_address:'서울특별시 강남구',\n      user_vaccinated:'Yes',\n      vaccine_type:'Moderna'\n    })\n\n    const{user_email, username, password, \n      user_name, user_birthday, user_sex, user_phone, \n      user_address, user_vaccinated, vaccine_type}='user'\n    \n    const userJoin=joinRequest=>axios.post(`${SERVER}/??`, JSON.stringify(joinRequest),{headers})\n    \n    const headers = {}\n\n    const handleSubmit=e=>{\n      e.prventDefault();\n      alert(`기입한 회원정보: ${JSON.stringify(user)}`  )\n      userJoin({user})\n      .then(res=>{alert(`가입 완료: ${res.data.result}`)})\n      .catch(err=>{alert(`가입 실패: ${err}`)})\n    }\n\n    const handleChange =e=>{\n      e.preventDefault()\n      const{value,name}=e.target\n      setUser({...user,[name]:value})    \n    }\n\n    const RegisterSchema = Yup.object().shape({\n      user_email: Yup.string().email('메일 형식에 맞게 입력해주세요').required('메일 주소를 입력해주세요'),\n      password: Yup.string().required('비밀번호 6 ~ 12자 이내로 작성해주세요').min(6, '6 ~ 12자 이내로 작성해주세요'),  \n      passwordConfirm: Yup.string().oneOf([Yup.ref('password'), null], '비밀번호가 일치하지 않습니다'),\n      username: Yup.string().required('아이디 6 ~ 12자 이내로 작성해주세요').min(6, '6 ~ 12자 이내로 작성해주세요'),\n      user_birthday: Yup.string().required(),\n      user_sex: Yup.string().required(),\n      user_phone: Yup.string().required('핸드폰 연락처 11자리를 입력해주세요'),\n      user_address: Yup.string().required(),\n      user_vaccinated: Yup.string('백신 접종완료 여부를 알려주세요'),\n      vaccine_type: Yup.string()        \n      })\n      const defaultValues = {\n        initialValues: {\n          user_email: '',\n          username:'',\n          password: '',\n          user_name: '',\n          user_birthday: '',\n          user_sex:'',\n          user_phone:'',\n          user_address:'',\n          user_vaccinated:'',\n          vaccine_type:''\n        },\n        validationSchema: RegisterSchema,\n        onSubmit: () => {\n          // navigate('/', { replace: true });\n          // navigate=클릭하면 메인페이지 뜨게 주소 넣기\n                      // RETRY\n        }\n      }\n      // const { errors, touched, handleSubmit, isSubmitting, getFieldProps } = formik;\n      const { errors, touched, isSubmitting, getFieldProps } = formik;\n\n      return (\n        <FormikProvider value={formik}>\n          <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n            <Stack spacing={3}>\n              <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\n                <TextField\n                  fullWidth\n                  label=\"이름\"\n                  {...getFieldProps('firstName')}\n                  error={Boolean(touched.firstName && errors.firstName)}\n                  helperText={touched.firstName && errors.firstName}\n                />\n    \n                <TextField\n                  fullWidth\n                  label=\"성\"\n                  {...getFieldProps('lastName')}\n                  error={Boolean(touched.lastName && errors.lastName)}\n                  helperText={touched.lastName && errors.lastName}\n                />\n              </Stack>\n    \n              <TextField\n                fullWidth\n                autoComplete=\"username\"\n                type=\"email\"\n                label=\"메일주소\"\n                {...getFieldProps('email')}\n                error={Boolean(touched.email && errors.email)}\n                helperText={touched.email && errors.email}\n              />\n    \n              <TextField\n                fullWidth\n                autoComplete=\"current-password\"\n                type={showPassword ? 'text' : 'password'}\n                label=\"비밀번호\"\n                {...getFieldProps('password')}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton edge=\"end\" onClick={() => setShowPassword((prev) => !prev)}>\n                        <Icon icon={showPassword ? eyeFill : eyeOffFill} />\n                      </IconButton>\n                    </InputAdornment>\n                  )\n                }}\n                error={Boolean(touched.password && errors.password)}\n                helperText={touched.password && errors.password}\n              />\n    \n              <LoadingButton\n                fullWidth\n                size=\"large\"\n                type=\"submit\"\n                variant=\"contained\"\n                loading={isSubmitting}\n              >\n                가입 신청\n              </LoadingButton>\n            </Stack>\n          </Form>\n        </FormikProvider>\n\n    )\n}\n\n// {\n//   user_email:'admin@naver.com',\n//       username:'admin',\n//       password:'admin',\n//       user_name:'admin001',\n//       user_birthday:'2021-06-28',\n//       user_sex:'male',\n//       user_phone:'01012345678',\n//       user_address:'서울특별시 강남구',\n//       user_vaccinated:'Yes',\n//       vaccine_type:'Moderna'\n// }"]},"metadata":{},"sourceType":"module"}