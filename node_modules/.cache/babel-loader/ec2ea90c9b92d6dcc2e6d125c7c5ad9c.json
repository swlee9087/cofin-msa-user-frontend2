{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\GitHub\\\\cofin-msa-user-frontend2\\\\src\\\\user\\\\components\\\\UserLogin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport { Icon } from '@iconify/react';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\nimport * as Yup from 'yup';\nimport 'formik';\nimport { Link, Stack, Checkbox, TextField, IconButton, InputAdornment, FormControlLabel } from '@mui/material';\nimport { LoadingButton } from '@mui/lab'; // import UserLost from './UserLost';\n\nimport Navigation from 'common/Navigation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserLogin() {\n  _s();\n\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n  const [login, setLogin] = useState({});\n  const {\n    user_email,\n    password\n  } = login;\n  const LoginSchema = Yup.object().shape({\n    user_email: Yup.string().user_email('메일주소 형식에 맞게 입력해주세요').required('메일 주소를 입력해주세요'),\n    password: Yup.string().required('비밀번호를 입력해주세요')\n  });\n  const formik = useFormik({\n    initialValues: {\n      user_email: \"\",\n      password: \"\",\n      remember: true\n    },\n    validationSchema: LoginSchema,\n    onSubmit: () => {\n      navigate('/{<Navigation/>}', {\n        replace: true\n      });\n    }\n  });\n  const {\n    errors,\n    touched,\n    values,\n    isSubmitting,\n    handleSubmit,\n    getFieldProps\n  } = formik;\n\n  const handleShowPassword = () => {\n    setShowPassword(show => !show);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormikProvider, {\n    value: formik,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      autoComplete: \"off\",\n      noValidate: true,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          autoComplete: \"email\",\n          type: \"user_email\",\n          label: \"\\uBA54\\uC77C \\uC8FC\\uC18C\",\n          ...getFieldProps('username'),\n          error: Boolean(touched.username && errors.username),\n          helperText: touched.username && errors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          autoComplete: \"current-password\",\n          type: showPassword ? 'text' : 'password',\n          label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n          ...getFieldProps('password'),\n          InputProps: {\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleShowPassword,\n                edge: \"end\",\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  icon: showPassword ? eyeFill : eyeOffFill\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)\n          },\n          error: Boolean(touched.password && errors.password),\n          helperText: touched.password && errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        sx: {\n          my: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, { ...getFieldProps('remember'),\n            checked: values.remember\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 22\n          }, this),\n          label: \"\\uB85C\\uADF8\\uC778 \\uC0C1\\uD0DC \\uC720\\uC9C0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n        fullWidth: true,\n        size: \"large\",\n        type: \"submit\",\n        variant: \"contained\",\n        loading: isSubmitting,\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this); //   const handleChange = e => {\n  //     const {value, name} = e.target\n  //     setLogin({\n  //       ...login,\n  //       [name] : value\n  //     })\n  //   }\n  //   const changeNull = ls =>{\n  //     for(const i of ls ){\n  //       document.getElementById(i).value = ''\n  //     }\n  //   }\n  //   const handleClick = e => {\n  //     e.preventDefault()\n  //     e.stopPropagation()\n  //     const loginRequest = {username, password}\n\n  /*\n  userLogin(loginRequest)\n  .then(res => {\n    const user = res.data;\n    if(user.username != null){\n      alert('로그인 성공, '+JSON.stringify(res.data))\n      localStorage.setItem('sessionUser', JSON.stringify(res.data))\n      history.push(\"/users/detail\")\n    }else{\n      alert('아이디, 비번 오류로 로그인 실패  ')\n      changeNull(['username','password'])\n    }\n  })\n  .catch(err => {\n    alert('접속 실패' + err)\n    changeNull(['username','password'])\n  })\n  */\n  //   }\n  //   return (\n  //     <form method=\"POST\">\n  //     <ul>\n  //         <li><label for=\"id\">아이디</label>\n  //         <input type=\"text\" id=\"username\" \n  //             name='username' value={username} onChange={handleChange}/></li>\n  //         <li><label for=\"pw\">비밀번호</label>\n  //         <input type=\"password\" id=\"password\" name=\"password\" onChange={handleChange}/></li>\n  //         <li><input type=\"button\" title=\"로그인\" value=\"로그인\" onClick={handleClick}/></li>\n  //     </ul>\n  // </form>\n  //   );\n}\n\n_s(UserLogin, \"MKM4EmzEwax1WHpb92n90Dm2Z+8=\", false, function () {\n  return [useNavigate, useFormik];\n});\n\n_c = UserLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserLogin\");","map":{"version":3,"sources":["C:/Users/USER/Documents/GitHub/cofin-msa-user-frontend2/src/user/components/UserLogin.js"],"names":["React","useState","Link","RouterLink","useNavigate","useFormik","Form","FormikProvider","Icon","eyeFill","eyeOffFill","Yup","Stack","Checkbox","TextField","IconButton","InputAdornment","FormControlLabel","LoadingButton","Navigation","UserLogin","navigate","showPassword","setShowPassword","login","setLogin","user_email","password","LoginSchema","object","shape","string","required","formik","initialValues","remember","validationSchema","onSubmit","replace","errors","touched","values","isSubmitting","handleSubmit","getFieldProps","handleShowPassword","show","Boolean","username","endAdornment","my"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link as RouterLink, useNavigate  } from 'react-router-dom';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport { Icon } from '@iconify/react';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\nimport * as Yup from 'yup';\nimport {} from 'formik'\nimport {\n    Link,\n    Stack,\n    Checkbox,\n    TextField,\n    IconButton,\n    InputAdornment,\n    FormControlLabel\n  } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n// import UserLost from './UserLost';\nimport Navigation from 'common/Navigation';\n\nexport default function UserLogin() {\n    const navigate = useNavigate();\n    const [showPassword, setShowPassword] = useState(false);\n    const [login, setLogin] = useState({})\n    const {user_email, password} = login\n\n    const LoginSchema = Yup.object().shape({\n        user_email: Yup.string().user_email('메일주소 형식에 맞게 입력해주세요').required('메일 주소를 입력해주세요'),\n        password: Yup.string().required('비밀번호를 입력해주세요')\n    })\n    const formik = useFormik({\n        initialValues: {\n            user_email: \"\",\n            password:\"\",\n            remember: true\n        },\n        validationSchema: LoginSchema,\n        onSubmit: () =>{\n            navigate('/{<Navigation/>}', {replace: true});            \n        }\n    })\n    const {errors, touched, values, isSubmitting, handleSubmit, getFieldProps}=formik;\n\n    const handleShowPassword=()=>{\n        setShowPassword((show)=>!show);\n    }\n\n    return(\n        <FormikProvider value={formik}>\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n        <Stack spacing={3}>\n          <TextField\n            fullWidth\n            autoComplete=\"email\"\n            type=\"user_email\"\n            label=\"메일 주소\"\n            {...getFieldProps('username')}\n            error={Boolean(touched.username && errors.username)}\n            helperText={touched.username && errors.username}\n          />\n\n          <TextField\n            fullWidth\n            autoComplete=\"current-password\"\n            type={showPassword ? 'text' : 'password'}\n            label=\"비밀번호\"\n            {...getFieldProps('password')}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton onClick={handleShowPassword} edge=\"end\">\n                    <Icon icon={showPassword ? eyeFill : eyeOffFill} />\n                  </IconButton>\n                </InputAdornment>\n              )\n            }}\n            error={Boolean(touched.password && errors.password)}\n            helperText={touched.password && errors.password}\n          />\n        </Stack>\n\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ my: 2 }}>\n          <FormControlLabel\n            control={<Checkbox {...getFieldProps('remember')} checked={values.remember} />}\n            label=\"로그인 상태 유지\"\n          />\n\n          {/* <Link component={UserLost} variant=\"subtitle2\" to=\"#\">\n            비밀번호 찾기\n          </Link> */}\n        </Stack>\n\n        <LoadingButton\n          fullWidth\n          size=\"large\"\n          type=\"submit\"\n          variant=\"contained\"\n          loading={isSubmitting}\n        >\n          로그인\n        </LoadingButton>\n      </Form>\n    </FormikProvider>\n    )\n//   const handleChange = e => {\n//     const {value, name} = e.target\n//     setLogin({\n//       ...login,\n//       [name] : value\n//     })\n//   }\n\n//   const changeNull = ls =>{\n//     for(const i of ls ){\n//       document.getElementById(i).value = ''\n//     }\n//   }\n//   const handleClick = e => {\n//     e.preventDefault()\n//     e.stopPropagation()\n//     const loginRequest = {username, password}\n    /*\n    userLogin(loginRequest)\n    .then(res => {\n      const user = res.data;\n      if(user.username != null){\n        alert('로그인 성공, '+JSON.stringify(res.data))\n        localStorage.setItem('sessionUser', JSON.stringify(res.data))\n        history.push(\"/users/detail\")\n      }else{\n        alert('아이디, 비번 오류로 로그인 실패  ')\n        changeNull(['username','password'])\n      }\n    })\n    .catch(err => {\n      alert('접속 실패' + err)\n      changeNull(['username','password'])\n    })\n    */\n//   }\n \n//   return (\n//     <form method=\"POST\">\n//     <ul>\n//         <li><label for=\"id\">아이디</label>\n//         <input type=\"text\" id=\"username\" \n//             name='username' value={username} onChange={handleChange}/></li>\n//         <li><label for=\"pw\">비밀번호</label>\n//         <input type=\"password\" id=\"password\" name=\"password\" onChange={handleChange}/></li>\n//         <li><input type=\"button\" title=\"로그인\" value=\"로그인\" onClick={handleClick}/></li>\n//     </ul>\n// </form>\n//   );\n}"]},"metadata":{},"sourceType":"module"}