{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\GitHub\\\\cofin-msa-user-frontend2\\\\src\\\\user\\\\components\\\\UserLost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport * as Yup from 'yup';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport { Icon } from '@iconify/react';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\nimport { Link, Stack, Checkbox, TextField, IconButton, InputAdornment, FormControlLabel } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { UserPage } from 'user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserLost() {\n  _s();\n\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n  const LostSchema = Yup.object().shape({\n    user_email: Yup.string().email().required('*필수 항목'),\n    user_phone: Yup.string().required('*필수 항목')\n  });\n  const formik = useFormik({\n    initialValues: {\n      user_email: '',\n      user_phone: ''\n    },\n    validationSchema: LostSchema,\n    onSubmit: () => {\n      // need pop up with id/pw info\n      navigate({\n        UserPage\n      }, {\n        replace: true\n      });\n    }\n  });\n  const {\n    errors,\n    touched,\n    values,\n    isSubmitting,\n    handleSubmit,\n    getFieldProps\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    align: \"center\",\n    style: {\n      display: \"inline-block\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uBE44\\uBC00 \\uBC88\\uD638 \\uCC3E\\uAE30 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"email\",\n        children: \"Email: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 49\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 54\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"phone\",\n        children: \"\\uC5F0\\uB77D\\uCC98 : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"phone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 49\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 54\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        title: \"ID/PW \\uCC3E\\uAE30\",\n        value: \"ID/PW \\uCC3E\\uAE30\",\n        onclick: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"sub\", {\n        children: \" * \\uBA54\\uC77C\\uD568\\uC744 \\uD655\\uC778\\uD574\\uC8FC\\uC138\\uC694! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserLost, \"TyfXYEpvWDWRGnFGjig1zuRer3M=\", false, function () {\n  return [useNavigate, useFormik];\n});\n\n_c = UserLost;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserLost\");","map":{"version":3,"sources":["C:/Users/USER/Documents/GitHub/cofin-msa-user-frontend2/src/user/components/UserLost.js"],"names":["React","useState","Yup","Link","RouterLink","useNavigate","useFormik","Form","FormikProvider","Icon","eyeFill","eyeOffFill","Stack","Checkbox","TextField","IconButton","InputAdornment","FormControlLabel","LoadingButton","UserPage","UserLost","navigate","showPassword","setShowPassword","LostSchema","object","shape","user_email","string","email","required","user_phone","formik","initialValues","validationSchema","onSubmit","replace","errors","touched","values","isSubmitting","handleSubmit","getFieldProps","display","width"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport * as Yup from 'yup';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport { Icon } from '@iconify/react';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\nimport {\n  Link,\n  Stack,\n  Checkbox,\n  TextField,\n  IconButton,\n  InputAdornment,\n  FormControlLabel\n} from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport {UserPage} from 'user'\n\nexport default function UserLost(){\n\n    const navigate = useNavigate();\n    const [showPassword, setShowPassword] = useState(false);\n    const LostSchema = Yup.object().shape({\n        user_email: Yup.string().email().required('*필수 항목'),\n        user_phone: Yup.string().required('*필수 항목')\n      });\n    const formik = useFormik({\n        initialValues: {\n            user_email: '',           \n            user_phone:'',\n    },\n    validationSchema: LostSchema,\n    onSubmit: () => {\n        // need pop up with id/pw info\n        navigate({ UserPage }, { replace: true });        \n    }});\n    const { errors, touched, values, isSubmitting, handleSubmit, getFieldProps } = formik;\n\n    return(\n        <div align=\"center\" style={{ display: \"inline-block\" }}>\n            <form style={{width:\"100%\"}}>\n                <h2>비밀 번호 찾기 </h2>\n                <label for=\"email\">Email: </label>\n                <input type=\"text\" id=\"email\" /><br/><br/>\n            \n                <label for=\"phone\">연락처 : </label>\n                <input type=\"text\" id=\"phone\" /><br/><br/>\n                {/* separate instance where input is wrong */}\n                {/* <Wrong/> */}\n                \n                <br/><input type=\"button\" title=\"ID/PW 찾기\" value=\"ID/PW 찾기\" onclick=\"submit\"/>\n                <sub> * 메일함을 확인해주세요! </sub>            \n            </form><br/>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}